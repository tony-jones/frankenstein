// Grid


// Make container a grid component
.grid {
  display: flex; // Set parent container to flex
  flex-direction: row; // Flex items are stacked in a row from left-to-right
  flex-wrap: wrap; // Flex items are displayed in multiple rows if needed.
  padding: $grid-padding;

  // Remove padding from outer container
  &.grid--no-space {
    padding: 0;

    // Remove margin from cells if no space is chosen
    .grid__cell {
      margin: 0;
    }
  }
}

// Align items to the top of the container
.grid--top {
  align-items: flex-start;
}

// Align items to the middle of the container
.grid--middle {
  align-items: center;
}

// Align items to the bottom of the container
.grid--bottom {
  align-items: flex-end;
}

// Stretch the items to fit with distributed space
.grid--stretch {
  align-items: stretch;
}

// Align the items' baselines
.grid--baseline {
  align-items: baseline;
}

// Make a grid cell element
.grid__cell {
  box-sizing: border-box;
  flex: 1;
  margin: $grid-margin;
}

// Position cell at the beginning of the container
.grid__cell--cell-top {
  align-self: flex-start;
}

// Position cell at the center of the container
.grid__cell--cell-center {
  align-self: center;
}

// Position cell at the end of the container
.grid__cell--cell-bottom {
  align-self: flex-end;
}

// Columns size class names are shortened to non BEM for sanity.

// Small screens from 320px to 480px
@include breakpoint(small) {
  @include cell-size($small-columns, $grid-gutter, s);
  @include cell-offset($small-columns, $grid-gutter, s);
}

// Medium screens from 480px to 840px
@include breakpoint(medium) {
  @include cell-size($medium-columns, $grid-gutter, m);
  @include cell-offset($medium-columns, $grid-gutter, m);
}

// Large screens from 840px and larger
@include breakpoint(large) {
  @include cell-size($large-columns, $grid-gutter, l);
  @include cell-offset($large-columns, $grid-gutter, l);
}
